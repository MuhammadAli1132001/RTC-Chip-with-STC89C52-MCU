C51 COMPILER V9.60.7.0   MAIN                                                              09/29/2023 22:31:53 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include "LCDh.h"
   3          #include <stdio.h>
   4          #include <intrins.h>
   5          
   6          sbit DS1302_CE = P3^5; // DS1302 chip enable pin
   7          sbit DS1302_CLK = P3^6; // DS1302 clock pin
   8          sbit DS1302_IO = P3^4; // DS1302 data I/O pin
   9          
  10          // DS1302 commands
  11          #define DS1302_READ_BURST 0xBF
  12          #define DS1302_WRITE_BURST 0xBE
  13          #define DS1302_SECONDS 0x80
  14          #define DS1302_SECONDS_read 0x81
  15          #define DS1302_MINUTES 0x82
  16          #define DS1302_MINUTES_read 0x83
  17          #define DS1302_HOURS   0x84
  18          #define DS1302_HOURS_read  0x85
  19          #define DS1302_DATE    0x86
  20          #define DS1302_MONTH   0x88
  21          #define DS1302_DAY     0x8A
  22          #define DS1302_YEAR    0x8C
  23          #define DS1302_CONTROL 0x8E
  24          #define DS1302_CHARGER 0x90
  25          #define DS1302_RAMBURST_READ 0xFF
  26          #define DS1302_RAMBURST_WRITE 0xFE
  27          #define CLK_DELAY 10
  28          
  29          
  30          
  31          void Write_Byte(unsigned int Value);
  32          unsigned char Read_Byte(unsigned char cmd);
  33          void DS1302_SetTime(unsigned char hour,  unsigned char minute, unsigned char second);
  34          void DS1302_SetDate(unsigned char day,  unsigned char month,  unsigned char year);
  35          void DS1302_GetTime(void);
  36          void DS1302_GetDate(void);
  37          void Send_Bit(unsigned int bitt);
  38          void DS1302_init();
  39          void DS1302_ReadByte();
  40          
  41              unsigned char hour, minute, second;
  42              unsigned char day, month, year;
  43              unsigned char timeString[9];
  44              unsigned int read_bytes[12];
  45          
  46          void main()
  47          {
  48   1      
  49   1          lcd_init();         // Initialize the LCD
  50   1          DS1302_init();        // Initialize ds1302
  51   1        
  52   1           // Set initial time and date
  53   1           DS1302_SetTime(0x23, 0x59, 0x50); 
  54   1           DS1302_SetDate(0x30, 0x09, 0x23); 
C51 COMPILER V9.60.7.0   MAIN                                                              09/29/2023 22:31:53 PAGE 2   

  55   1      
  56   1          while (1)
  57   1          {   
  58   2              DS1302_CE = 1;
  59   2              DS1302_ReadByte();
  60   2              DS1302_CE = 0;
  61   2      
  62   2              DS1302_GetTime();
  63   2              DS1302_GetDate();
  64   2      
  65   2          }
  66   1      }
  67          
  68          void SCLK_Pulse()
  69          {
  70   1          DS1302_CLK = 1;
  71   1          DS1302_CLK = 0;
  72   1      }
  73          
  74          void Send_Bit(unsigned int bitt)// Function to send a bit to the DS1302
  75          {
  76   1          if(bitt != 0)
  77   1            {
  78   2          
  79   2            DS1302_IO = 1;
  80   2          }
  81   1          else
  82   1            {
  83   2            DS1302_IO = 0;
  84   2          }
  85   1      }
  86          
  87          
  88          void write_byte(unsigned int byte)
  89          {
  90   1          unsigned int i,Bit;
  91   1          
  92   1          for (i = 0; i < 8; i++)
  93   1          {
  94   2              Bit = byte & (1 << i); // Get each bit
  95   2              Send_Bit(Bit);         // Send the bit
  96   2              SCLK_Pulse();        // Generate clock pulse
  97   2          }
  98   1      }
  99          
 100          unsigned char read_byte(unsigned char cmd)
 101          {
 102   1          unsigned int j,dat = 0;
 103   1          write_byte(cmd);
 104   1      
 105   1           for (j = 0; j < 8; j++)
 106   1            {
 107   2              dat >>= 1;
 108   2              if (DS1302_IO)
 109   2              {
 110   3                  dat |= 0x80;     // Set the corresponding bit in R
 111   3              }
 112   2              else
 113   2              {
 114   3                  dat &= 0x7F;    // Clear the corresponding bit in R
 115   3              }
 116   2      
C51 COMPILER V9.60.7.0   MAIN                                                              09/29/2023 22:31:53 PAGE 3   

 117   2              SCLK_Pulse();       // Generate clock pulse
 118   2            }
 119   1          return dat;
 120   1      }
 121                
 122          
 123          // Function to write a byte to the DS1302unsigned char cmd,
 124          void DS1302_WriteByte(unsigned char cmd, unsigned char Value)
 125          {
 126   1         
 127   1          DS1302_CE = 1;
 128   1          write_byte(cmd);
 129   1          write_byte(Value);
 130   1          DS1302_CE = 0;
 131   1      }
 132          
 133          
 134          // Function to read a byte from the DS1302
 135          void DS1302_ReadByte()
 136          {
 137   1          unsigned int dat=0, j,i;
 138   1        
 139   1          DS1302_CE = 1;
 140   1          write_byte(DS1302_READ_BURST);
 141   1      
 142   1        for( i = 0; i<8; i++){
 143   2          
 144   2          dat = 0;
 145   2          
 146   2          for (j = 0; j < 8; j++)          // Receive the data byte
 147   2          {
 148   3              dat >>= 1;
 149   3              if (DS1302_IO)
 150   3              {
 151   4                  dat |= 0x80;     // Set the corresponding bit in R
 152   4              }
 153   3              else
 154   3              {
 155   4                  dat &= 0x7F;    // Clear the corresponding bit in R
 156   4              }
 157   3      
 158   3              SCLK_Pulse();       // Generate clock pulse
 159   3          }
 160   2          
 161   2          read_bytes[i] = dat;
 162   2          
 163   2        }
 164   1          DS1302_CE = 0;
 165   1      
 166   1      }
 167          
 168          void DS1302_init()
 169          {
 170   1        unsigned char r;
 171   1        
 172   1            DS1302_CE = 0;
 173   1            DS1302_CLK = 0;
 174   1            DS1302_WriteByte(DS1302_CONTROL,0x00);
 175   1            DS1302_WriteByte(DS1302_CHARGER,0xAB);
 176   1        
 177   1        r = read_byte(DS1302_SECONDS_read);
 178   1        
C51 COMPILER V9.60.7.0   MAIN                                                              09/29/2023 22:31:53 PAGE 4   

 179   1        if ((r & DS1302_SECONDS_read) != 0)
 180   1        DS1302_WriteByte(DS1302_SECONDS,0);
 181   1            
 182   1      }
 183          void DS1302_SetTime(unsigned char hour, unsigned char minute, unsigned char second)
 184          {
 185   1      
 186   1          DS1302_WriteByte(DS1302_SECONDS,second);
 187   1          DS1302_WriteByte(DS1302_MINUTES,minute);
 188   1          DS1302_WriteByte(DS1302_HOURS,hour);
 189   1       
 190   1      }
 191          
 192          void LCD_display(unsigned char Number)
 193          {
 194   1        lcd_write_data(((Number>>4)&0x0F) + 0x30);
 195   1        lcd_write_data((Number&0x0F) + 0x30);
 196   1      }
 197          
 198          void DS1302_GetTime(void)
 199          {
 200   1        
 201   1              lcd_set_cursor(0, 0);
 202   1              lcd_write_string("Time:");
 203   1        
 204   1              lcd_set_cursor(0, 6);
 205   1              LCD_display(read_bytes[2]); 
 206   1              lcd_write_data(':');
 207   1              delay_ms(10);
 208   1        
 209   1              lcd_set_cursor(0, 9);
 210   1              LCD_display(read_bytes[1]);
 211   1              lcd_write_data(':');
 212   1              delay_ms(10);
 213   1      
 214   1              lcd_set_cursor(0, 12);
 215   1              LCD_display(read_bytes[0]);
 216   1              delay_ms(10); 
 217   1      }
 218          
 219          // Function to set the date in DS1302
 220          void DS1302_SetDate(unsigned char day, unsigned char month, unsigned char year)
 221          {
 222   1        
 223   1          DS1302_WriteByte(DS1302_DATE,day);
 224   1          DS1302_WriteByte(DS1302_MONTH,month);
 225   1          DS1302_WriteByte(DS1302_YEAR,year);
 226   1      }
 227          
 228          
 229           //Function to read the date from DS1302
 230          void DS1302_GetDate()
 231          {
 232   1              lcd_set_cursor(1, 0);
 233   1              lcd_write_string("Date:");
 234   1        
 235   1              lcd_set_cursor(1, 6);
 236   1              LCD_display(read_bytes[3]); 
 237   1              lcd_write_data(':');
 238   1              delay_ms(10);
 239   1        
 240   1              lcd_set_cursor(1, 9);
C51 COMPILER V9.60.7.0   MAIN                                                              09/29/2023 22:31:53 PAGE 5   

 241   1              LCD_display(read_bytes[4]);
 242   1              lcd_write_data(':');
 243   1              delay_ms(10);
 244   1      
 245   1              lcd_set_cursor(1, 12);
 246   1              LCD_display(read_bytes[6]);
 247   1              delay_ms(10);
 248   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    535    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
